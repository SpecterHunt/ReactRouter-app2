{"ast":null,"code":"var _jsxFileName = \"/Users/ayushtripathi/Desktop/resume/React/ReactRouter-app2/frontend/src/pages/NewEvent.js\";\nimport { json, redirect } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n}\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action() {\n  // const data = await request.formData();\n\n  const eventData = {\n    title: \"title\",\n    image: \"image\",\n    date: \"date\",\n    description: \"description\"\n  };\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"Could not save event.\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","redirect","EventForm","NewEventPage","action","eventData","title","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","message","status"],"sources":["/Users/ayushtripathi/Desktop/resume/React/ReactRouter-app2/frontend/src/pages/NewEvent.js"],"sourcesContent":["import { json, redirect } from \"react-router-dom\";\n\nimport EventForm from \"../components/EventForm\";\n\nfunction NewEventPage() {\n  return <EventForm />;\n}\n\nexport default NewEventPage;\n\nexport async function action() {\n  // const data = await request.formData();\n\n  const eventData = {\n    title: \"title\",\n    image: \"image\",\n    date: \"date\",\n    description: \"description\",\n  };\n\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(eventData),\n  });\n\n  if (!response.ok) {\n    throw json({ message: \"Could not save event.\" }, { status: 500 });\n  }\n\n  return redirect(\"/events\");\n}\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAEjD,OAAOC,SAAS,MAAM,yBAAyB;AAAC;AAEhD,SAASC,YAAY,GAAG;EACtB,oBAAO,QAAC,SAAS;IAAA;IAAA;IAAA;EAAA,QAAG;AACtB;AAAC,KAFQA,YAAY;AAIrB,eAAeA,YAAY;AAE3B,OAAO,eAAeC,MAAM,GAAG;EAC7B;;EAEA,MAAMC,SAAS,GAAG;IAChBC,KAAK,EAAE,OAAO;IACdC,KAAK,EAAE,OAAO;IACdC,IAAI,EAAE,MAAM;IACZC,WAAW,EAAE;EACf,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IAC3DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,SAAS;EAChC,CAAC,CAAC;EAEF,IAAI,CAACK,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAMjB,IAAI,CAAC;MAAEkB,OAAO,EAAE;IAAwB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACnE;EAEA,OAAOlB,QAAQ,CAAC,SAAS,CAAC;AAC5B;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}