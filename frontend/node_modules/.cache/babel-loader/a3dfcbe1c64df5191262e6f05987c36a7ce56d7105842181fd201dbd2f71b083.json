{"ast":null,"code":"var _jsxFileName = \"/Users/ayushtripathi/Desktop/resume/React/ReactRouter-app2/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { json, useLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetchdetails for selected event\"\n    }, {\n      status: 500\n    });\n  } else return response;\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","json","useLoaderData","EventItem","EventDetailPage","data","event","loader","request","params","id","eventId","response","fetch","ok","message","status"],"sources":["/Users/ayushtripathi/Desktop/resume/React/ReactRouter-app2/frontend/src/pages/EventDetail.js"],"sourcesContent":["import React from \"react\";\nimport { json, useLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\n\nconst EventDetailPage = () => {\n  const data = useLoaderData();\n  return (\n    <>\n      <EventItem event={data.event} />\n    </>\n  );\n};\n\nexport default EventDetailPage;\n\nexport async function loader({ request, params }) {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json(\n      { message: \"Could not fetchdetails for selected event\" },\n      {\n        status: 500,\n      }\n    );\n  } else return response;\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACtD,OAAOC,SAAS,MAAM,yBAAyB;AAAC;AAAA;AAEhD,MAAMC,eAAe,GAAG,MAAM;EAAA;EAC5B,MAAMC,IAAI,GAAGH,aAAa,EAAE;EAC5B,oBACE;IAAA,uBACE,QAAC,SAAS;MAAC,KAAK,EAAEG,IAAI,CAACC;IAAM;MAAA;MAAA;MAAA;IAAA;EAAG,iBAC/B;AAEP,CAAC;AAAC,GAPIF,eAAe;EAAA,QACNF,aAAa;AAAA;AAAA,KADtBE,eAAe;AASrB,eAAeA,eAAe;AAE9B,OAAO,eAAeG,MAAM,OAAsB;EAAA,IAArB;IAAEC,OAAO;IAAEC;EAAO,CAAC;EAC9C,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAClE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMb,IAAI,CACR;MAAEc,OAAO,EAAE;IAA4C,CAAC,EACxD;MACEC,MAAM,EAAE;IACV,CAAC,CACF;EACH,CAAC,MAAM,OAAOJ,QAAQ;AACxB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}